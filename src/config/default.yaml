# set configs under attack

# --- pymarl options ---
runner: "episode_robust" # Runs 1 env for an episode
mac: "attack_mac" # Basic controller
env: "sc2" # Environment name
env_args: {} # Arguments for the environment
batch_size_run: 1 # Number of environments to run in parallel
test_nepisode: 20 # Number of episodes to test for
test_interval: 2000 # Test after {} timesteps have passed
test_greedy: True # Use greedy evaluation (if False, will set epsilon floor to 0
log_interval: 2000 # Log summary of stats after every {} timesteps
runner_log_interval: 2000 # Log runner stats (not test stats) every {} timesteps
learner_log_interval: 2000 # Log training stats every {} timesteps
t_max: 10000 # Stop running after this many timesteps
use_cuda: True # Use gpu by default unless it isn't available
buffer_cpu_only: True # If true we won't keep all of the replay buffer in vram

# --- Logging options ---
use_tensorboard: False # Log results to tensorboard
save_model: True # Save the models to disk
save_model_interval: 2000000 # Save models after this many timesteps
checkpoint_path: "./ego_models/" # Load a checkpoint from this path
evaluate: False # Evaluate model for test_nepisode episodes and quit (no training)
load_step: 0 # Load model trained on this many timesteps (0 if choose max possible)
save_replay: False # Saving the replay of the model loaded from checkpoint_path
#local_results_path: "robust_results" # Path for local results

# --- RL hyperparameters ---
gamma: 0.99
batch_size: 32 # Number of episodes to train on
buffer_size: 32 # Size of the replay buffer
lr: 0.0004 # Learning rate for agents
critic_lr: 0.0005 # Learning rate for critics
optim_alpha: 0.99 # RMSProp alpha
optim_eps: 0.00001 # RMSProp epsilon
grad_norm_clip: 5 # Reduce magnitude of gradients above this L2 norm

# --- Agent parameters ---
agent: "rnn" # Default rnn agent
rnn_hidden_dim: 64 # Size of hidden state for default rnn agent
obs_agent_id: True # Include the agent's one_hot id in the observation
obs_last_action: True # Include the agent's last action (one_hot) in the observation

# --- Experiment running params ---
repeat_id: 1
label: "default_label"

# --- Attacker parameters ---
population_train_steps: 6
population_train_num: 1
individual_sample_episode: 4
save_archive_interval: 400
select_strategy: "random"
spare_lambda: 0.04
attack_batch_size: 10
min_jsdloss_sample: 64
attacker_eval_num: 4
smoothing_factor: 0.02
gen_random_start: 0.4
gen_random_end: 0.05
threshold_ratio_start: 0.9
threshold_ratio_end: 0.5
attack_nepisode: 5
default_nepisode: 5
truncation: False
shaping_reward: True
one_buffer: True
#seed: 2
concat_left_time: True
penalty: True
penalty_weight: 0.5
long_eval_interval: 100
attack_lr: 0.0002
ego_train_step: 10
go_on: False
train_attack_threshold: 0

archive_size: 15
jsd_beta: 1.2
eval_num: 1000
generation: 800
finetune_gen: 500
eval_na_path: "./ego_models/2s3z"
archive_load_path: ""
ego_agent_path: ""
start_eval: False
gpu_id: 0
attack_num: 6
test_attack_num: 6
fine_tune: False
pop_size: 4
run_type: "robust" # robust, attack, attack_na, robust_na, eval_na
test_attacker_archive_path: ""
diversity: True
sparse_ref_delta: 0.05
#sparse_ref_delta: 0
load_sparse_ref_delta: 0.05
train_random: False
